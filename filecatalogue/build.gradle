import proguard.gradle.ProGuardTask

plugins {
    id "com.android.application"
    id "kotlin-android"
}

android {

    def properties = new Properties()
    def fileInputStream = new FileInputStream(rootProject.file("project.properties"))
    properties.load(fileInputStream)
    fileInputStream.close()

    def versionMajor = 2
    def versionMinor = 0
    def versionPatch = 7

    namespace = 'com.farrusco.filecatalogue'

    bundle {
        storeArchive {
            enable = false
        }
    }

    compileSdk = 34

    signingConfigs {
        debug {
            storeFile = file(properties['debug.storefile'])
            storePassword = properties['debug.storepassword']
            keyAlias = properties['debug.keyalias']
            keyPassword = properties['debug.keypassword']
        }
        release {
            storeFile = file(properties['release.storefile'])
            storePassword = properties['release.storepassword']
            keyAlias = properties['release.keyalias']
            keyPassword = properties['release.keypassword']
        }
    }
    defaultConfig {
        applicationId namespace
        minSdk = 28
        targetSdk = 34
        minSdkVersion 28

        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        multiDexEnabled = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "DATABASE_NAME", '"filecatalogue.db"'
        buildConfigField "Integer", "VERSION_CODE", '20'
        signingConfig = signingConfigs.debug
    }
    buildFeatures {
        viewBinding = true
    }
    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            buildConfigField("String", "AD_MOB_APP_ID", "\"${admobAppId}\"")
            resValue("string", "AD_MOB_APP_ID", "${admobAppId}")
            resValue "string", "AD_MOB_DASHBOARD_AD_ID", "${admobDashboardAdId}"
            ndk {
                debugSymbolLevel = 'SYMBOL_TABLE'
            }
        }
        debug {
            minifyEnabled true
            debuggable true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            buildConfigField("String", "AD_MOB_APP_ID", "\"${admobAppId}\"")
            resValue("string", "AD_MOB_APP_ID", "${admobAppId}")
            resValue "string", "AD_MOB_DASHBOARD_AD_ID", "${admobDashboardAdId}"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }


    buildFeatures {
        viewBinding = true
    }

    dependenciesInfo {
        includeInBundle = true
        includeInApk = true
    }


    ndkVersion = '28.0.12674087 rc2'
    flavorDimensions += "version"

    productFlavors {
        full {
            manifestPlaceholders appLabel: "File catalogue"
            versionNameSuffix ".full"
            buildConfigField "String", "BACKUP", '\"xml\"'
            buildConfigField "Integer", "LIMIT", '-1'
            buildConfigField "Integer", "ADS", '-1'
            dimension 'version'
            signingConfig = signingConfigs.release
        }
        free {
            manifestPlaceholders appLabel: "File catalogue"
            versionNameSuffix ".free"
            buildConfigField "String", "BACKUP", '\"nopw,xml\"'
            buildConfigField "Integer", "LIMIT", '-1'
            buildConfigField "Integer", "ADS", '-1'
            dimension 'version'
            signingConfig = signingConfigs.release
        }
        demo {
            manifestPlaceholders appLabel: 'File catalogue - Demo'
            versionNameSuffix ".demo"
            buildConfigField "String", "BACKUP", '\"xml\"' // xml, db, nopw
            buildConfigField "Integer", "LIMIT", '75'
            buildConfigField "Integer", "ADS", '-1'
            dimension 'version'
            signingConfig = signingConfigs.release
        }
    }
    lint {
        baseline = file("lint-baseline.xml")
        //lintConfig = file("lint.xml")
        checkAllWarnings = true
        warningsAsErrors = false
        abortOnError = false
    }
}

dependencies {

    implementation project(path: ":projectclasses")
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation libs.androidx.multidex

    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.play.services.ads
    implementation libs.androidx.viewpager2

    implementation libs.androidx.core.ktx.v1131
    implementation libs.androidx.exifinterface
    implementation libs.androidx.window

    implementation libs.android.database.sqlcipher
    implementation libs.androidx.sqlite.ktx

    // CameraX View class (For camera preview)
    implementation libs.androidx.camera.core
    implementation libs.androidx.camera.camera2
    implementation libs.androidx.camera.lifecycle
    implementation libs.androidx.camera.view

    implementation libs.firebase.core
    implementation libs.firebase.ml.model.interpreter

    //ML Kit (To detect faces)
    implementation libs.face.detection
    implementation libs.play.services.mlkit.face.detection

    //GSON (Conversion of String to Map & Vice-Versa)
    implementation libs.gson
    implementation libs.firebase.crashlytics.buildtools
    implementation libs.guava

    debugImplementation libs.leakcanary.android
    implementation libs.realm.gradle.plugin
}

tasks.register('createObfuscated', ProGuardTask) {
    dependsOn 'jar'
    description 'Optimizes and obfuscates the created distribution jar.'
    verbose
}
